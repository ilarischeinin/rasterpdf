% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/raster_pdf.R
\name{raster_pdf}
\alias{raster_pdf}
\alias{agg_pdf}
\title{Raster PDF graphics device (with PNG pages)}
\usage{
raster_pdf(filename = "Rplots.pdf", width = 7, height = 7,
  units = c("in", "cm", "mm", "px"), res = 72L,
  png_function = grDevices::png, ...)

agg_pdf(...)
}
\arguments{
\item{filename}{A character string of the output file name.}

\item{width}{Page width.}

\item{height}{Page height.}

\item{units}{The units in which \code{height} and \code{weight} are given. Can be
\code{in} (inches, the default), \code{cm}, \code{mm}, or \code{px} (pixels).}

\item{res}{The resolution in ppi.}

\item{png_function}{A PNG device function. Default is \code{\link[grDevices:png]{grDevices::png()}}.}

\item{...}{Further arguments passed through to the PNG device function
specified in \code{png_function}.}
}
\description{
Open a graphics device for raster PDF files. Internally, a PNG device is
used for the individual pages, which are then combined into one PDF file.
}
\details{
The ability to plot raster graphics inside PDF files is useful when one needs
multipage documents, but the plots contain so many individual elements that
use of vector graphics (as grDevices::pdf() does) results in inconveniently
large file sizes. Internally, rasterpdf plots each individual page as a PNG,
and then combines them in one PDF file.

\code{agg_pdf(...)} is shorthand for
\code{raster_pdf(..., png_function = ragg::agg_png)}.
}
\examples{
raster_pdf(tempfile(fileext = ".pdf"))
plot(iris)
dev.off()

}
\seealso{
\code{\link[grDevices:pdf]{grDevices::pdf()}}, \code{\link[grDevices:png]{grDevices::png()}}, \code{\link[ragg:agg_png]{ragg::agg_png()}}
}
